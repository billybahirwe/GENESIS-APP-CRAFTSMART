extends ../layout

block content
  .container
    .page-header
      h1.page-title My Profile
      p.page-subtitle Manage your professional information

    .profile-content-wrapper
      // -------------------------------
      // Profile Form Column
      // -------------------------------
      .profile-form-column
        form.profile-form(action="/craftsman/profile", method="POST", enctype="multipart/form-data")
          // Hidden file input for profile picture
          input.form-control(type="file", id="profilePicture", name="profilePicture", accept="image/*", style="display:none")
          
          .profile-header
            .profile-avatar
              .profile-picture-wrapper
                if user.profilePicture
                  img.profile-img(src=user.profilePicture, alt="Profile Picture")
                else
                  span.profile-initial #{user.name && user.name.charAt(0) ? user.name.charAt(0) : 'U'}
                .overlay
                  i.fa.fa-pencil-alt

          .profile-form-section
            if user.approved === false
              .alert.alert-warning
                p Your profile is **pending admin approval**. You cannot make changes at this time.
                p.form-note Once approved, you will be able to update your profile again.

            fieldset(disabled=user.approved === false)
              
              // Basic Info
              .form-row
                .form-group
                  label(for="name") Full Name
                  input.form-control(type="text", id="name", name="name", value=user.name || '', required)
                .form-group
                  label(for="email") Email
                  input.form-control(type="email", id="email", name="email", value=user.email || '', required)

              .form-group
                label(for="mobile") Mobile Number
                input.form-control(type="tel", id="mobile", name="mobile", value=user.mobile || '', placeholder="+1234567890", required)

              // Location
              .form-row
                .form-group
                  label(for="city") City
                  input.form-control(type="text", id="city", name="location[city]", value=user.location && user.location.city || '', required)
                .form-group
                  label(for="region") Region
                  input.form-control(type="text", id="region", name="location[region]", value=user.location && user.location.region || '', required)
              .form-group
                label(for="district") District
                input.form-control(type="text", id="district", name="location[district]", value=user.location && user.location.district || '', required)

              // Experience & Skills
              .form-group
                label(for="experience") Years of Experience
                input.form-control(type="number", id="experience", name="experience", value=user.experience || 0, min="0", required)

              .form-group
                label(for="skills") Skills (comma-separated)
                input.form-control(type="text", id="skills", name="skills", value=user.skills ? user.skills.join(', ') : '', placeholder="e.g., Plumbing, Electrical, Carpentry")

              // File Uploads (inside the form)
              .form-group
                label(for="cv") Upload your CV (PDF only)
                input.form-control(type="file", id="cv", name="cv", accept="application/pdf")
              .form-group
                label(for="coverLetter") Upload your Cover Letter (PDF only)
                input.form-control(type="file", id="coverLetter", name="coverLetter", accept="application/pdf")

              // Skill Ratings
              .form-group.skill-ratings
                h4 Rate Your Skills (1-5)
                each skill in ['Communication', 'Technical Skill', 'Punctuality', 'Quality', 'Safety']
                  .rating-item
                    label #{skill}
                    .star-rating(data-skill=skill.toLowerCase().replace(' ', ''))
                      - for (var i = 1; i <= 5; i++)
                        span.star(data-value=i) â˜…
                      input(type="hidden", name=`profile[${skill.toLowerCase().replace(' ', '')}]`, value=user.profile && user.profile[skill.toLowerCase().replace(' ', '')] || 0)

              // Submit
              .form-actions
                button.btn.btn-primary(type="submit") Update Profile

      // -------------------------------
      // Chart Column
      // -------------------------------
      .profile-chart-column
        .profile-chart-section
          .chart-container
            h3 Skill Assessment
            .chart-wrapper
              canvas#skillChart(width="400", height="400")
            .chart-legend
              .legend-item
                .legend-color.legend-user
                span Your Skills
              .legend-item
                .legend-color.legend-platform
                span Platform Average

    // Inline CSS for stars + avatar
    style.
      .star {
        cursor: pointer;
        font-size: 24px;
        color: #ccc;
        transition: color 0.2s;
        display: inline-block;
        margin-right: 2px;
      }
      .star.selected { color: gold; }
      .star:hover { color: orange; }

      .profile-picture-wrapper {
        position: relative;
        width: 120px;
        height: 120px;
        border-radius: 50%;
        background: #f3f3f3;
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
      }
      .profile-picture-wrapper img {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
      .profile-initial {
        font-size: 40px;
        color: #555;
      }
      .overlay {
        position: absolute;
        bottom: 0;
        width: 100%;
        background: rgba(0,0,0,0.5);
        color: #fff;
        text-align: center;
        padding: 5px;
        font-size: 14px;
        opacity: 0;
        transition: opacity 0.3s;
      }
      .profile-picture-wrapper:hover .overlay {
        opacity: 1;
      }

block scripts
  script(src="https://cdn.jsdelivr.net/npm/chart.js")
  script.
    // -------------------------------
    // Radar Chart
    // -------------------------------
    const ctx = document.getElementById('skillChart').getContext('2d');
    const userProfile = !{JSON.stringify(user.profile || {})};
    const platformAverageData = !{JSON.stringify(platformAverage || {})};

    const userData = [
      (userProfile.communication || 0) * 20,
      (userProfile.technicalSkill || 0) * 20,
      (userProfile.punctuality || 0) * 20,
      (userProfile.quality || 0) * 20,
      (userProfile.safety || 0) * 20
    ];

    const platformData = [
      (platformAverageData.communication || 0) * 20,
      (platformAverageData.technicalSkill || 0) * 20,
      (platformAverageData.punctuality || 0) * 20,
      (platformAverageData.quality || 0) * 20,
      (platformAverageData.safety || 0) * 20
    ];

    const chart = new Chart(ctx, {
      type: 'radar',
      data: {
        labels: ['Communication', 'Technical Skill', 'Punctuality', 'Quality', 'Safety'],
        datasets: [
          {
            label: 'Your Skills',
            data: userData,
            backgroundColor: 'rgba(37,99,235,0.2)',
            borderColor: 'rgba(37,99,235,1)',
            borderWidth: 2,
            pointBackgroundColor: 'rgba(37,99,235,1)',
            pointBorderColor: '#fff'
          },
          {
            label: 'Platform Average',
            data: platformData,
            backgroundColor: 'rgba(156,163,175,0.2)',
            borderColor: 'rgba(156,163,175,1)',
            borderWidth: 2,
            pointBackgroundColor: 'rgba(156,163,175,1)',
            pointBorderColor: '#fff'
          }
        ]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        scales: { r: { beginAtZero: true, max: 100, ticks: { stepSize: 20 } } },
        plugins: { legend: { display: false } }
      }
    });

    // -------------------------------
    // Star Rating Interaction
    // -------------------------------
    const starContainers = document.querySelectorAll('.star-rating');
    const skillLabels = ['Communication','Technical Skill','Punctuality','Quality','Safety'];

    starContainers.forEach(container => {
      const skillName = container.dataset.skill;
      const stars = container.querySelectorAll('.star');
      const hiddenInput = container.querySelector('input[type="hidden"]');
      const initialValue = parseInt(hiddenInput.value);

      stars.forEach((star, index) => { if(index < initialValue) star.classList.add('selected'); });

      stars.forEach(star => {
        star.addEventListener('click', e => {
          const value = parseInt(star.dataset.value);
          hiddenInput.value = value;
          stars.forEach((s, i) => {
            if(i < value) s.classList.add('selected');
            else s.classList.remove('selected');
          });
          const skillIndex = skillLabels.findIndex(label => label.toLowerCase().replace(' ', '') === skillName);
          if(skillIndex !== -1) {
            chart.data.datasets[0].data[skillIndex] = value * 20;
            chart.update();
          }
        });
      });
    });

    // -------------------------------
    // Profile Picture Upload + Preview
    // -------------------------------
    const profilePictureInput = document.getElementById('profilePicture');
    const profilePictureWrapper = document.querySelector('.profile-picture-wrapper');

    if (profilePictureWrapper && profilePictureInput) {
      profilePictureWrapper.addEventListener('click', () => {
        profilePictureInput.click();
      });

      profilePictureInput.addEventListener('change', function() {
        const file = this.files[0];
        if(file) {
          const reader = new FileReader();
          reader.onload = e => {
            let img = profilePictureWrapper.querySelector('img');
            if(!img) {
              img = document.createElement('img');
              img.classList.add('profile-img');
              profilePictureWrapper.innerHTML = '';
              profilePictureWrapper.appendChild(img);
            }
            img.src = e.target.result;
          }
          reader.readAsDataURL(file);
        }
      });
    }
