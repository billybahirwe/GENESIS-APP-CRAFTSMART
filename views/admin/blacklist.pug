extends ../layout

block content
  .row
    .col-12
      .d-flex.justify-content-between.align-items-center.mb-4
        h1.mb-0
          i.bi.bi-shield-x.me-2
          | Blacklist Management
        button.btn.btn-primary(data-bs-toggle="modal" data-bs-target="#addBlacklistModal")
          i.bi.bi-plus-circle.me-2
          | Add to Blacklist

  .row
    .col-12
      .card.shadow-sm
        .card-header.bg-dark.text-white
          h5.mb-0
            i.bi.bi-list.me-2
            | Blacklisted Users (#{blacklist.length})
        .card-body.p-0
          if blacklist.length === 0
            .text-center.py-5
              i.bi.bi-shield-check.display-1.text-success
              h4.mt-3 No blacklisted users
              p.text-muted The blacklist is currently empty.
          else
            .table-responsive
              table.table.table-striped.table-hover.mb-0
                thead.table-dark
                  tr
                    th Name
                    th Mobile
                    th Reason
                    th Added Date
                    th Actions
                tbody
                  each user in blacklist
                    tr(id=`blacklist-${user._id}`)
                      td
                        strong #{user.name}
                      td
                        code #{user.mobile}
                      td
                        span.badge.bg-warning.text-dark #{user.reason}
                      td
                        small.text-muted #{formatDate(user.addedAt)}
                      td
                        button.btn.btn-danger.btn-sm(onclick=`removeFromBlacklist('${user._id}')`)
                          i.bi.bi-trash.me-1
                          | Remove

  // Add to Blacklist Modal
  .modal.fade#addBlacklistModal(tabindex="-1")
    .modal-dialog
      .modal-content
        form(action="/admin/blacklist" method="POST")
          .modal-header.bg-primary.text-white
            h5.modal-title
              i.bi.bi-shield-x.me-2
              | Add User to Blacklist
            button.btn-close.btn-close-white(type="button" data-bs-dismiss="modal")
          .modal-body
            .mb-3
              label.form-label(for="name") Full Name
              input#name.form-control(type="text" name="name" required placeholder="Enter full name")
            .mb-3
              label.form-label(for="mobile") Mobile Number
              input#mobile.form-control(type="tel" name="mobile" required placeholder="Enter mobile number")
            .mb-3
              label.form-label(for="reason") Reason for Blacklisting
              select#reason.form-select(name="reason" required)
                option(value="") Select a reason...
                option(value="Poor Performance") Poor Performance
                option(value="Unprofessional Behavior") Unprofessional Behavior
                option(value="Safety Violations") Safety Violations
                option(value="Fraud/Scam") Fraud/Scam
                option(value="Harassment") Harassment
                option(value="Other") Other
          .modal-footer
            button.btn.btn-secondary(type="button" data-bs-dismiss="modal") Cancel
            button.btn.btn-danger(type="submit")
              i.bi.bi-shield-x.me-2
              | Add to Blacklist

  script.
    function removeFromBlacklist(id) {
      if (confirm('Are you sure you want to remove this user from the blacklist?')) {
        fetch(`/admin/blacklist/${id}`, {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json'
          }
        })
        .then(response => response.json())
        .then(data => {
          if (data.message) {
            document.getElementById(`blacklist-${id}`).remove();
            
            // Show success message
            const alertDiv = document.createElement('div');
            alertDiv.className = 'alert alert-success alert-dismissible fade show';
            alertDiv.innerHTML = `
              ${data.message}
              <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            document.querySelector('.container').insertBefore(alertDiv, document.querySelector('.row'));
            
            // Auto dismiss after 3 seconds
            setTimeout(() => {
              alertDiv.remove();
            }, 3000);
          }
        })
        .catch(error => {
          console.error('Error:', error);
          alert('Error removing user from blacklist');
        });
      }
    }




//- extends ../layout

//- block content
//-   .container
//-     .page-header
//-       h1 Blacklist Management
//-       p Manage banned users

//-     // Add button
//-     .blacklist-actions.mb-3
//-       button.btn.btn-primary(type="button", id="toggleAddBtn") Add to Blacklist

//-     // Add form (hidden by default)
//-     .add-form-container#add-form.hidden
//-       form(action="/admin/blacklist", method="POST", id="blacklistForm")
//-         .form-group.mb-2
//-           input.form-control(type="text", name="name", required, placeholder="Name")
//-         .form-group.mb-2
//-           input.form-control(type="tel", name="mobile", required, placeholder="Mobile")
//-         .form-group.mb-2
//-           textarea.form-control(name="reason", required, rows="3", placeholder="Reason")
//-         .form-actions.mt-2
//-           button.btn.btn-success(type="submit") Add
//-           button.btn.btn-secondary(type="button", id="cancelAddBtn") Cancel

//-     hr

//-     // Blacklist entries
//-     .blacklist-container
//-       if blacklist.length
//-         each entry in blacklist
//-           .card.mb-3.p-3.shadow-sm
//-             h5= entry.name
//-             p.mb-1 
//-               strong Mobile: 
//-               |  #{entry.mobile}
//-             p.mb-1 
//-               strong Reason: 
//-               |  #{entry.reason}
//-             p.mb-1 
//-               strong Added: 
//-               |  #{entry.addedAt ? formatDate(entry.addedAt) : 'N/A'}
//-             // Remove button with safe _id
//-             button.btn.btn-danger.btn-sm.remove-btn(
//-               type="button", 
//-               data-id=entry._id ? entry._id : ''
//-             ) Remove
//-       else
//-         p.text-muted No blacklisted users.

//-     // Remove confirmation modal
//-     #removeModal.modal.fade(tabindex="-1")
//-       .modal-dialog
//-         .modal-content
//-           .modal-header
//-             h5.modal-title Remove from Blacklist
//-             button.btn-close(type="button", data-bs-dismiss="modal")
//-           .modal-body
//-             p Are you sure you want to remove this user?
//-           .modal-footer
//-             button.btn.btn-secondary(type="button", data-bs-dismiss="modal") Cancel
//-             button.btn.btn-danger#confirmRemove(type="button") Confirm

//- block append scripts
//-   script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js")
//-   script.
//-     document.addEventListener("DOMContentLoaded", function() {
//-       const addForm = document.getElementById("add-form");
//-       const toggleBtn = document.getElementById("toggleAddBtn");
//-       const cancelBtn = document.getElementById("cancelAddBtn");

//-       // Toggle Add Form
//-       toggleBtn.addEventListener("click", () => addForm.classList.toggle("hidden"));
//-       cancelBtn.addEventListener("click", () => addForm.classList.add("hidden"));

//-       // Optional: debug form submission
//-       const form = document.getElementById("blacklistForm");
//-       if (form) {
//-         form.addEventListener("submit", (e) => {
//-           console.log("Form submitted", {
//-             name: form.name.value,
//-             mobile: form.mobile.value,
//-             reason: form.reason.value
//-           });
//-         });
//-       }

//-       // Remove modal logic
//-       let currentEntryId = null;
//-       const removeModalEl = document.getElementById("removeModal");
//-       const removeModal = new bootstrap.Modal(removeModalEl);

//-       // Event delegation for remove buttons with debug log
//-       const blacklistContainer = document.querySelector(".blacklist-container");
//-       if (blacklistContainer) {
//-         blacklistContainer.addEventListener("click", function(e) {
//-           if (e.target && e.target.classList.contains("remove-btn")) {
//-             console.log("Remove button clicked:", e.target.dataset.id);
//-             currentEntryId = e.target.dataset.id;
//-             removeModal.show();
//-           }
//-         });
//-       }

//-       // Confirm removal
//-       const confirmBtn = document.getElementById("confirmRemove");
//-       if (confirmBtn) {
//-         confirmBtn.addEventListener("click", async () => {
//-           if (!currentEntryId) return;

//-           try {
//-             const res = await fetch(`/admin/blacklist/${currentEntryId}`, { method: 'DELETE' });
//-             if (res.ok) {
//-               // Remove the card from the DOM
//-               const btn = document.querySelector(`.remove-btn[data-id="${currentEntryId}"]`);
//-               if (btn) btn.closest(".card").remove();
//-               removeModal.hide();
//-               currentEntryId = null;
//-             } else {
//-               alert("Failed to remove user");
//-             }
//-           } catch (err) {
//-             console.error("Error removing user:", err);
//-             alert("Error removing user");
//-           }
//-         });
//-       }
//-     });

//-   style.
//-     .hidden { display: none; }
