extends ../layout

block content
  .container
    .page-header
      h1.page-title Craftsman Profile
      p.page-subtitle Profile details for #{user.name}

    .profile-container
      .profile-picture-section
        if user.profilePicture
          img.profile-img(src=user.profilePicture, alt="Profile Picture")
        else
          span.profile-initial #{user.name.charAt(0)}

      .profile-details-section
        h3 Personal Information
        .details-group
          strong Full Name:
          span= user.name
        .details-group
          strong Email:
          span= user.email
        .details-group
          strong Mobile:
          span= user.mobile
        .details-group
          strong Location:
          if user.location
            span #{user.location.city}, #{user.location.district}, #{user.location.region}
          else
            span N/A
        .details-group
          strong Years of Experience:
          span= user.experience ? user.experience + ' years' : 'N/A'
        .details-group
          strong Skills:
          span= user.skills ? user.skills.join(', ') : 'N/A'
        
        h3 Documents
        .details-group
          strong CV:
          if user.cvPath
            a(href=user.cvPath, target="_blank") View CV
          else
            span Not uploaded
        .details-group
          strong Cover Letter:
          if user.coverLetterPath
            a(href=user.coverLetterPath, target="_blank") View Cover Letter
          else
            span Not uploaded

      .profile-chart-section
        .chart-container
          h3 Skill Assessment
          .chart-wrapper
            canvas(id="skillChart", width="400", height="400")
          .chart-legend
            .legend-item
              .legend-color.legend-user
              span User Skills
            .legend-item
              .legend-color.legend-platform
              span Platform Average

block scripts
  script(src="https://cdn.jsdelivr.net/npm/chart.js")
  script.
    // CSS for the chart and other layout elements
    const style = document.createElement('style');
    style.innerHTML = `
      .profile-container {
        display: flex;
        gap: 30px;
        align-items: flex-start;
      }
      .profile-details-section {
        flex: 1;
      }
      .profile-chart-section {
        flex: 1;
        position: sticky;
        top: 50px;
        background: white;
        padding: 2rem;
        border-radius: 12px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      }
      .profile-picture-section img {
        width: 150px;
        height: 150px;
        border-radius: 50%;
        object-fit: cover;
      }
      .profile-picture-section .profile-initial {
        width: 150px;
        height: 150px;
        border-radius: 50%;
        background-color: #f0f4f8;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 4rem;
        font-weight: bold;
        color: #6b7280;
      }
      .chart-legend {
        display: flex;
        justify-content: center;
        margin-top: 1rem;
      }
      .legend-item {
        display: flex;
        align-items: center;
        margin: 0 10px;
      }
      .legend-color {
        width: 20px;
        height: 20px;
        margin-right: 8px;
      }
      .legend-user {
        background-color: rgba(37, 99, 235, 1);
      }
      .legend-platform {
        background-color: rgba(156, 163, 175, 1);
      }
    `;
    document.head.appendChild(style);

    const ctx = document.getElementById('skillChart').getContext('2d');
    
    // The user's profile data
    const userSkills = !{JSON.stringify(user.profile || {})};
    // The platform average data (if you are passing it)
    const platformAverage = !{JSON.stringify(platformAverage || {})};

    new Chart(ctx, {
      type: 'radar',
      data: {
        labels: ['Communication', 'Technical Skill', 'Punctuality', 'Quality', 'Safety'],
        datasets: [{
          label: 'User Skills',
          // Correctly scale the data from a 1-5 rating to a 0-100 scale for the chart
          data: [
            (userSkills.communication || 0) * 20,
            (userSkills.technicalSkill || 0) * 20,
            (userSkills.punctuality || 0) * 20,
            (userSkills.quality || 0) * 20,
            (userSkills.safety || 0) * 20
          ],
          backgroundColor: 'rgba(37, 99, 235, 0.2)',
          borderColor: 'rgba(37, 99, 235, 1)',
          borderWidth: 2,
          pointBackgroundColor: 'rgba(37, 99, 235, 1)',
          pointBorderColor: '#fff',
          pointHoverBackgroundColor: '#fff',
          pointHoverBorderColor: 'rgba(37, 99, 235, 1)'
        }, {
          label: 'Platform Average',
          data: [
            (platformAverage.communication || 0) * 20,
            (platformAverage.technicalSkill || 0) * 20,
            (platformAverage.punctuality || 0) * 20,
            (platformAverage.quality || 0) * 20,
            (platformAverage.safety || 0) * 20
          ],
          backgroundColor: 'rgba(156, 163, 175, 0.2)',
          borderColor: 'rgba(156, 163, 175, 1)',
          borderWidth: 2,
          pointBackgroundColor: 'rgba(156, 163, 175, 1)',
          pointBorderColor: '#fff',
          pointHoverBackgroundColor: '#fff',
          pointHoverBorderColor: 'rgba(156, 163, 175, 1)'
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        scales: {
          r: {
            beginAtZero: true,
            max: 100,
            ticks: {
              stepSize: 20
            }
          }
        },
        plugins: {
          legend: {
            display: false
          }
        }
      }
    });